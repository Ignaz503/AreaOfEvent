@typeparam TData

<div class="modal fade show d-block" tabindex="-1" role="dialog">
  <div class="modal-backdrop fade show" @onclick="Cancel"></div>
  <div class="modal-dialog" style="z-index: 1050">
    <!-- Pop it above the backdrop -->
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Do What?</h5>
        <button type="button" class="close" aria-label="Close" @onclick="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="container-fluid" id="locationDisplay">
          <div class="row">
            <label>Location:</label>
          </div>
          <div class="row">
            <div class="col-md-5">@Data.GeoLocation.PrettyLatitude()</div>
            <div class="col-md-5">@Data.GeoLocation.PrettyLongitude()</div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" @onclick="Remove">Remove</button>
        <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
      </div>
    </div>
  </div>
</div>

@code {
  [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

  [Parameter] public TData Data { get; set; }

  async Task Close() => await BlazoredModal.CloseAsync( ModalResult.Ok( false ) );
  async Task Cancel() => await BlazoredModal.CancelAsync();
  async Task Remove() => await BlazoredModal.CloseAsync( ModalResult.Ok( true ) );
}
